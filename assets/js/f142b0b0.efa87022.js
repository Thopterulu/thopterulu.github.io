"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3270],{8607:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>t,metadata:()=>a,toc:()=>c});var r=s(4848),i=s(8453);const t={},l="Comparatif Lang",a={id:"learning-languages/comparatif-lang",title:"Comparatif Lang",description:"Test LLM",source:"@site/docs/learning-languages/comparatif-lang.md",sourceDirName:"learning-languages",slug:"/learning-languages/comparatif-lang",permalink:"/docs/learning-languages/comparatif-lang",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"C",permalink:"/docs/learning-languages/C"},next:{title:"Databases",permalink:"/docs/learning-languages/databases"}},o={},c=[{value:"Test LLM",id:"test-llm",level:2},{value:"1. <strong>Python</strong>",id:"1-python",level:3},{value:"2. <strong>Java</strong>",id:"2-java",level:3},{value:"3. <strong>C#</strong>",id:"3-c",level:3},{value:"4. <strong>C++</strong>",id:"4-c",level:3},{value:"5. <strong>Ruby</strong>",id:"5-ruby",level:3},{value:"6. <strong>TypeScript</strong>",id:"6-typescript",level:3},{value:"je continue avec le LLM",id:"je-continue-avec-le-llm",level:2},{value:"1. <strong>Go</strong>",id:"1-go",level:3},{value:"2. <strong>Rust</strong>",id:"2-rust",level:3},{value:"3. <strong>Zig</strong>",id:"3-zig",level:3},{value:"4. <strong>Haskell</strong>",id:"4-haskell",level:3},{value:"<strong>Conclusion</strong>",id:"conclusion",level:3},{value:"Haskell",id:"haskell",level:2},{value:"LISP based",id:"lisp-based",level:2},{value:"Why should I care as a lisp programmer?",id:"why-should-i-care-as-a-lisp-programmer",level:3},{value:"Conclusion",id:"conclusion-1",level:2}];function u(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"comparatif-lang",children:"Comparatif Lang"})}),"\n",(0,r.jsx)(n.h2,{id:"test-llm",children:"Test LLM"}),"\n",(0,r.jsx)(n.p,{children:"J'ai demand\xe9 \xe0 un LLM de me pr\xe9senter les diff\xe9rents lang qui permettent la POO. La syntaxe utilis\xe9e est moyenne sur certains langages..."}),"\n",(0,r.jsxs)(n.p,{children:["Voici des exemples d'une classe ",(0,r.jsx)(n.code,{children:"Humain"})," dans certains des langages les plus populaires et largement utilis\xe9s pour la programmation orient\xe9e objet. Ces langages sont connus pour leurs \xe9cosyst\xe8mes robustes et sont couramment utilis\xe9s dans divers secteurs :"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h3,{id:"1-python",children:["1. ",(0,r.jsx)(n.strong,{children:"Python"})]}),"\n",(0,r.jsx)(n.p,{children:"Python est appr\xe9ci\xe9 pour sa syntaxe simple et sa versatilit\xe9, avec une orientation objet puissante et des biblioth\xe8ques pour presque tout."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'class Humain:\r\n    def __init__(self, nom, age):\r\n        self.nom = nom\r\n        self.age = age\r\n\r\n    def se_presenter(self):\r\n        print(f"Je m\'appelle {self.nom} et j\'ai {self.age} ans.")\r\n\r\n# Utilisation\r\nhumain = Humain("Alice", 30)\r\nhumain.se_presenter()\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h3,{id:"2-java",children:["2. ",(0,r.jsx)(n.strong,{children:"Java"})]}),"\n",(0,r.jsx)(n.p,{children:"Java est un pilier des syst\xe8mes d\u2019entreprise, connu pour sa portabilit\xe9 (\xe9crire une fois, ex\xe9cuter partout) et sa forte orientation objet."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'public class Humain {\r\n    private String nom;\r\n    private int age;\r\n\r\n    public Humain(String nom, int age) {\r\n        this.nom = nom;\r\n        this.age = age;\r\n    }\r\n\r\n    public void sePresenter() {\r\n        System.out.println("Je m\'appelle " + nom + " et j\'ai " + age + " ans.");\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        Humain humain = new Humain("Alice", 30);\r\n        humain.sePresenter();\r\n    }\r\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h3,{id:"3-c",children:["3. ",(0,r.jsx)(n.strong,{children:"C#"})]}),"\n",(0,r.jsx)(n.p,{children:"C# est utilis\xe9 principalement pour les applications Windows, le d\xe9veloppement Web, et les jeux (avec Unity). Sa syntaxe est similaire \xe0 Java et offre des fonctionnalit\xe9s orient\xe9es objets avanc\xe9es."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'using System;\r\n\r\npublic class Humain {\r\n    public string Nom { get; set; }\r\n    public int Age { get; set; }\r\n\r\n    public Humain(string nom, int age) {\r\n        Nom = nom;\r\n        Age = age;\r\n    }\r\n\r\n    public void SePresenter() {\r\n        Console.WriteLine($"Je m\'appelle {Nom} et j\'ai {Age} ans.");\r\n    }\r\n}\r\n\r\n// Utilisation\r\npublic class Program {\r\n    public static void Main() {\r\n        Humain humain = new Humain("Alice", 30);\r\n        humain.SePresenter();\r\n    }\r\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h3,{id:"4-c",children:["4. ",(0,r.jsx)(n.strong,{children:"C++"})]}),"\n",(0,r.jsx)(n.p,{children:"C++ combine programmation orient\xe9e objet et performances \xe9lev\xe9es, utilis\xe9 pour les syst\xe8mes embarqu\xe9s, jeux, et logiciels \xe0 haute performance."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:'#include <iostream>\r\n#include <string>\r\n\r\nclass Humain {\r\npublic:\r\n    Humain(std::string nom, int age) : nom(nom), age(age) {}\r\n\r\n    void sePresenter() const {\r\n        std::cout << "Je m\'appelle " << nom << " et j\'ai " << age << " ans." << std::endl;\r\n    }\r\n\r\nprivate:\r\n    std::string nom;\r\n    int age;\r\n};\r\n\r\n// Utilisation\r\nint main() {\r\n    Humain humain("Alice", 30);\r\n    humain.sePresenter();\r\n    return 0;\r\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h3,{id:"5-ruby",children:["5. ",(0,r.jsx)(n.strong,{children:"Ruby"})]}),"\n",(0,r.jsx)(n.p,{children:"Ruby est appr\xe9ci\xe9 dans le d\xe9veloppement Web, surtout avec le framework Rails, pour sa syntaxe \xe9l\xe9gante et sa forte orientation objet."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'class Humain\r\n    def initialize(nom, age)\r\n        @nom = nom\r\n        @age = age\r\n    end\r\n\r\n    def se_presenter\r\n        puts "Je m\'appelle #{@nom} et j\'ai #{@age} ans."\r\n    end\r\nend\r\n\r\n# Utilisation\r\nhumain = Humain.new("Alice", 30)\r\nhumain.se_presenter\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h3,{id:"6-typescript",children:["6. ",(0,r.jsx)(n.strong,{children:"TypeScript"})]}),"\n",(0,r.jsx)(n.p,{children:"TypeScript est un sur-ensemble de JavaScript qui ajoute des types, id\xe9al pour des projets de grande envergure. Il est orient\xe9 objet, avec une syntaxe proche de celle de JavaScript."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"class Humain {\r\n    nom: string;\r\n    age: number;\r\n\r\n    constructor(nom: string, age: number) {\r\n        this.nom = nom;\r\n        this.age = age;\r\n    }\r\n\r\n    sePresenter(): void {\r\n        console.log(`Je m'appelle ${this.nom} et j'ai ${this.age} ans.`);\r\n    }\r\n}\r\n\r\n// Utilisation\r\nconst humain = new Humain(\"Alice\", 30);\r\nhumain.sePresenter();\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"je-continue-avec-le-llm",children:"je continue avec le LLM"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h3,{id:"1-go",children:["1. ",(0,r.jsx)(n.strong,{children:"Go"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pourquoi c'est int\xe9ressant"})," : Go est connu pour sa simplicit\xe9 et sa courbe d\u2019apprentissage douce. Il est con\xe7u pour les ",(0,r.jsx)(n.strong,{children:"syst\xe8mes distribu\xe9s"})," et le d\xe9veloppement web, avec des ",(0,r.jsx)(n.strong,{children:"goroutines"})," pour la gestion de la concurrence, une collecte des ordures (garbage collection) int\xe9gr\xe9e, et une syntaxe claire."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Utilit\xe9 g\xe9n\xe9rale"})," : Go est d\xe9j\xe0 adopt\xe9 en production dans de nombreux secteurs (notamment chez Google, Dropbox, etc.) pour le d\xe9veloppement de microservices, de services API et de syst\xe8mes distribu\xe9s. Sa popularit\xe9 vient de son efficacit\xe9 dans les applications r\xe9seau et la simplicit\xe9 avec laquelle il g\xe8re la concurrence."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Apprentissage et application"})," : Go convient parfaitement si tu recherches une introduction pratique \xe0 la programmation syst\xe8me et concurrente, avec des d\xe9bouch\xe9s dans le d\xe9veloppement web, le cloud, et les applications r\xe9seau."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"En r\xe9sum\xe9"})," : Go est un excellent choix pour des projets rapides en production, o\xf9 la simplicit\xe9 et la rapidit\xe9 d'ex\xe9cution sont prioritaires."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h3,{id:"2-rust",children:["2. ",(0,r.jsx)(n.strong,{children:"Rust"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pourquoi c'est int\xe9ressant"})," : Rust est con\xe7u pour des performances et une s\xe9curit\xe9 m\xe9moire maximales, sans garbage collection, avec un ",(0,r.jsx)(n.strong,{children:"syst\xe8me de types avanc\xe9"})," et un syst\xe8me de ",(0,r.jsx)(n.strong,{children:"propri\xe9t\xe9 et d\u2019emprunt"})," (ownership/borrowing) pour \xe9viter les fuites de m\xe9moire et les erreurs de concurrence."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Utilit\xe9 g\xe9n\xe9rale"})," : Rust excelle dans les applications syst\xe8me, les logiciels embarqu\xe9s, les jeux, et m\xeame les applications de haute performance sur le web. Il est souvent cit\xe9 comme une alternative plus s\xe9curis\xe9e et moderne \xe0 C et C++."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Apprentissage et application"})," : Rust est plus difficile \xe0 ma\xeetriser que Go mais procure des comp\xe9tences en gestion m\xe9moire fine et en d\xe9veloppement syst\xe8me. Si tu cherches une ma\xeetrise accrue de la gestion m\xe9moire avec des applications pratiques dans la s\xe9curit\xe9 et la performance, Rust est une option puissante et polyvalente."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"En r\xe9sum\xe9"})," : Rust est le meilleur choix pour des projets qui n\xe9cessitent \xe0 la fois s\xe9curit\xe9, performance, et contr\xf4le m\xe9moire, avec des concepts de bas niveau plus avanc\xe9s."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h3,{id:"3-zig",children:["3. ",(0,r.jsx)(n.strong,{children:"Zig"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pourquoi c'est int\xe9ressant"})," : Zig est un langage moderne qui vise \xe0 remplacer C avec une syntaxe \xe9pur\xe9e, un contr\xf4le total sur la gestion m\xe9moire, et une compatibilit\xe9 native avec le code C sans le c\xf4t\xe9 complexe de C++."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Utilit\xe9 g\xe9n\xe9rale"})," : Zig est en pleine croissance dans les domaines du d\xe9veloppement syst\xe8me et des logiciels embarqu\xe9s. Il est utilis\xe9 pour des applications bas niveau, les jeux, et les outils de compilation, avec un contr\xf4le absolu sur les ressources et sans runtime."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Apprentissage et application"})," : Zig est assez sp\xe9cialis\xe9 mais peut \xeatre une excellente introduction pour comprendre les concepts de bas niveau, sans les complexit\xe9s syntaxiques de C++. Si tu cherches une alternative \xe0 C avec des options de m\xe9moire avanc\xe9es, Zig est tr\xe8s int\xe9ressant."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"En r\xe9sum\xe9"})," : Zig est un choix id\xe9al pour des d\xe9veloppeurs syst\xe8me cherchant une alternative plus moderne et s\xe9curis\xe9e \xe0 C, particuli\xe8rement adapt\xe9 aux projets de bas niveau et \xe0 l\u2019embarqu\xe9."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h3,{id:"4-haskell",children:["4. ",(0,r.jsx)(n.strong,{children:"Haskell"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pourquoi c'est int\xe9ressant"})," : Haskell est un langage fonctionnel pur, avec un syst\xe8me de types avanc\xe9 et des abstractions comme les monades et les foncteurs qui le rendent parfait pour apprendre et appliquer des concepts fonctionnels profonds."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Utilit\xe9 g\xe9n\xe9rale"})," : Bien que Haskell soit surtout populaire dans les milieux acad\xe9miques et pour les analyses de donn\xe9es, il est \xe9galement utilis\xe9 dans des projets n\xe9cessitant une ",(0,r.jsx)(n.strong,{children:"logique robuste"})," et une ",(0,r.jsx)(n.strong,{children:"v\xe9rification formelle"}),". Sa capacit\xe9 \xe0 minimiser les effets de bord en fait un choix solide pour les syst\xe8mes critiques."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Apprentissage et application"})," : Haskell est id\xe9al pour ma\xeetriser la programmation fonctionnelle pure et pour d\xe9velopper une rigueur dans la gestion de la logique et des structures de donn\xe9es. Cependant, il est moins polyvalent pour les projets courants en production."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"En r\xe9sum\xe9"})," : Haskell est une excellente option pour s\u2019immerger dans la programmation fonctionnelle et pour des applications n\xe9cessitant une rigueur math\xe9matique et logique, mais il est moins pratique pour le d\xe9veloppement g\xe9n\xe9raliste ou les projets orient\xe9s production."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"conclusion",children:(0,r.jsx)(n.strong,{children:"Conclusion"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Si tu cherches un langage polyvalent pour des projets en production, particuli\xe8rement dans le d\xe9veloppement web ou les syst\xe8mes distribu\xe9s"})," : ",(0,r.jsx)(n.strong,{children:"Go"})," est un bon choix, simple et efficace pour des solutions rapides."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Pour une compr\xe9hension et un contr\xf4le m\xe9moire avanc\xe9s avec des d\xe9bouch\xe9s en applications syst\xe8me et embarqu\xe9es"})," : ",(0,r.jsx)(n.strong,{children:"Rust"})," est l\u2019option la plus robuste, combinant s\xe9curit\xe9 et performance."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Pour une approche de bas niveau moderne et une alternative \xe0 C dans le d\xe9veloppement syst\xe8me"})," : ",(0,r.jsx)(n.strong,{children:"Zig"})," est un excellent compromis, sp\xe9cialement pour les projets o\xf9 le contr\xf4le m\xe9moire est crucial mais o\xf9 tu souhaites \xe9viter la complexit\xe9 de C++."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Si tu veux explorer et ma\xeetriser les concepts fonctionnels avanc\xe9s et aborder la rigueur logique"})," : ",(0,r.jsx)(n.strong,{children:"Haskell"})," est la meilleure option pour l'apprentissage acad\xe9mique et la recherche en logique fonctionnelle."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["En g\xe9n\xe9ral, ",(0,r.jsx)(n.strong,{children:"Rust"})," est le choix le plus complet pour des projets ambitieux en production, particuli\xe8rement si tu veux des connaissances approfondies en syst\xe8mes et s\xe9curit\xe9 m\xe9moire."]}),"\n",(0,r.jsx)(n.h2,{id:"haskell",children:"Haskell"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["by\xa0",(0,r.jsx)(n.a,{href:"https://github.com/haskell-perf/checklist",children:"haskell-perf"})]}),"\n",(0,r.jsxs)(n.li,{children:["by\xa0",(0,r.jsx)(n.a,{href:"https://github.com/iand675/haskell-checklist",children:"iand675"})]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/tfausak/haskell-package-checklist",children:"package"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Huge list of videos, talks , courses for Haskell programming language, that i want to remember."})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/hzlmn/haskell-must-watch",children:"awesome haskell must watch"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"lisp-based",children:"LISP based"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/dundalek/awesome-lisp-languages",children:"awesome lisp languages"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/CodyReichert/awesome-cl",children:"awesome commmon lisp"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"why-should-i-care-as-a-lisp-programmer",children:"Why should I care as a lisp programmer?"}),"\n",(0,r.jsx)(n.p,{children:"If you already love s-expressions then lisp-flavored languages will make it nicer when you need to build on existing platforms. In case the target language does not support advanced features like macros and REPL-driven development, these can often be easily added by using the s-expressions layer."}),"\n",(0,r.jsx)(n.p,{children:"The second point is about helping to spread lisp and its powerful ideas more. The example of Clojure and its relative popularity shows that being hosted on existing mainstream language and leveraging ecosystems of existing libraries is a key to broader adoption. It also lowers the barrier for people to try lisp and learn about the ideas behind it. Traditionally to learn lisp one needs to learn and get used to very unfamiliar syntax while at the same time being exposed to a completely new environment and ecosystem. Taking the environment out of the equation can make the experience of trying out lisp more approachable."}),"\n",(0,r.jsx)(n.h2,{id:"conclusion-1",children:"Conclusion"}),"\n",(0,r.jsx)(n.p,{children:"it's horsecrap. But I choosed : Haskell si c'est trop dur => GO (je connais d\xe9j\xe0 un peu) => Rust => Zig"})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var r=s(6540);const i={},t=r.createContext(i);function l(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);